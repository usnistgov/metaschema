<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://csrc.nist.gov/ns/oscal/1.0" xmlns:oscal-prose="http://csrc.nist.gov/ns/oscal/1.0">
  <xs:element name="prose" type="oscal-prose:prose"/>
  <xs:complexType name="prose">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="oscal-prose:h1"/>
      <xs:element ref="oscal-prose:h2"/>
      <xs:element ref="oscal-prose:h3"/>
      <xs:element ref="oscal-prose:h4"/>
      <xs:element ref="oscal-prose:h5"/>
      <xs:element ref="oscal-prose:h6"/>
      <xs:element ref="oscal-prose:p"/>
      <xs:element ref="oscal-prose:ul"/>
      <xs:element ref="oscal-prose:ol"/>
      <xs:element ref="oscal-prose:pre"/>
      <xs:element ref="oscal-prose:table"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="h1">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:inlines"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="h2">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:inlines"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="h3">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:inlines"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="h4">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:inlines"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="h5">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:inlines"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="h6">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:inlines"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="p">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:everything-inline"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="pre">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="oscal-prose:mix"/>
        <xs:element ref="oscal-prose:a"/>
      </xs:choice>
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ol">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="oscal-prose:li"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="li">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="oscal-prose:everything-inline"/>
        <xs:element ref="oscal-prose:ol"/>
        <xs:element ref="oscal-prose:ul"/>
      </xs:choice>
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ul">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="oscal-prose:li"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="table">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="oscal-prose:tr"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tr">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element maxOccurs="unbounded" ref="oscal-prose:td"/>
        <xs:element maxOccurs="unbounded" ref="oscal-prose:th"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="th">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:everything-inline"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="td">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:everything-inline"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="everything-inline">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="oscal-prose:mix"/>
        <xs:group ref="oscal-prose:special"/>
        <xs:element ref="oscal-prose:a"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <!-- note mix does not include anchors, which do not come for free -->
  <xs:group name="mix">
    <xs:sequence>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="oscal-prose:inlines"/>
    </xs:sequence>
  </xs:group>
  <!--
    declaring as zeroOrMore/choice avoids XSD substitution group
    nb anchor element ('xref') is not included in inlines
  -->
  <xs:group name="inlines">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="oscal-prose:q"/>
        <xs:element ref="oscal-prose:code"/>
        <xs:element ref="oscal-prose:em"/>
        <xs:element ref="oscal-prose:i"/>
        <xs:element ref="oscal-prose:strong"/>
        <xs:element ref="oscal-prose:b"/>
        <xs:element ref="oscal-prose:sub"/>
        <xs:element ref="oscal-prose:sup"/>
        <xs:element ref="oscal-prose:img"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <!-- q is a little special, it's not just mix -->
  <xs:element name="q">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="oscal-prose:code"/>
        <xs:element ref="oscal-prose:em"/>
        <xs:element ref="oscal-prose:i"/>
        <xs:element ref="oscal-prose:b"/>
        <xs:element ref="oscal-prose:strong"/>
        <xs:element ref="oscal-prose:sub"/>
        <xs:element ref="oscal-prose:sup"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!-- A bit of code (perhaps capable of evaluation in the correct context) -->
  <xs:element name="code">
    <xs:complexType mixed="true">
      <xs:group ref="oscal-prose:mix"/>
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="strong">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="oscal-prose:mix"/>
        <xs:element ref="oscal-prose:a"/>
      </xs:choice>
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="em">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="oscal-prose:mix"/>
        <xs:element ref="oscal-prose:a"/>
      </xs:choice>
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="i">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="oscal-prose:mix"/>
        <xs:element ref="oscal-prose:a"/>
      </xs:choice>
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="b">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="oscal-prose:mix"/>
        <xs:element ref="oscal-prose:a"/>
      </xs:choice>
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="sub">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="sup">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="oscal-prose:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="img">
    <xs:complexType>
      <xs:attribute name="alt"/>
      <xs:attribute name="src" use="required" type="xs:anyURI"/>
    </xs:complexType>
  </xs:element>
  <!-- Using HTML for this -->
  <xs:element name="a">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="oscal-prose:q"/>
        <xs:element ref="oscal-prose:code"/>
        <xs:element name="em">
          <xs:complexType mixed="true">
            <xs:attributeGroup ref="oscal-prose:optionalClass"/>
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:attribute name="href"/>
    </xs:complexType>
  </xs:element>
  <!-- not html! -->
  <!-- declaring as zeroOrMore/choice avoids XSD substitution group -->
  <xs:group name="special">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <!-- any other inline elements go here -->
        <xs:element ref="oscal-prose:insert"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <!--
    A value to be assigned by responder via parameter
    (a parameter must be available)
  -->
  <xs:element name="insert">
    <xs:complexType>
      <xs:attribute name="param-id" use="required" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <!--
    Within a selection, a choice - tbd
    unlike 'value', choice may have inline stuff as well as 'assign' elements
    choice = element choice { (assign | mix)* }
  -->
  <!--
    IDs are required everywhere for now
    idAttr      = attribute id { xsd:ID }
  -->
  <!--
    we used to distinguish btw @type and @name the latter for components
    now we overload 'class' every which way
  -->
  <xs:attributeGroup name="requiredClass"/>
  <xs:attributeGroup name="optionalClass"/>
  <!--<xs:attributeGroup name="requiredClass">
    <xs:attribute name="class" use="required"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="optionalClass">
    <xs:attribute name="class"/>
  </xs:attributeGroup>
  --><xs:attributeGroup name="hrefAttr">
    <xs:attribute name="href"/>
  </xs:attributeGroup>
</xs:schema>
<!-- requiredClass = attribute name { xsd:NCName } -->
