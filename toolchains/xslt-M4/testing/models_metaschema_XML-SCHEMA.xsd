<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
           xmlns:everything="http://csrc.nist.gov/metaschema/ns/everything"
           xmlns:oscal-prose="http://csrc.nist.gov/metaschema/ns/everything"
           elementFormDefault="qualified"
           targetNamespace="http://csrc.nist.gov/metaschema/ns/everything"
           version="1.0">
   <xs:annotation>
      <xs:appinfo>
         <m:schema-name>NIST Metaschema Everything</m:schema-name>
         <m:schema-version>1.0</m:schema-version>
         <m:short-name>everything</m:short-name>
         <m:remarks>
            <p>A mini metaschema produced for <em>conversion</em> testing purposes.</p>
            <p>This metaschema exercises modeling with global definitions. It does not exercise datatypes, constraints, or cardinality except as reflected in models (where grouping must be explicit).</p>
            <p>When this is stable and working, extend to include local definitions.</p>
            <p>Also cover <code>use-name</code> as appropriate.</p>
         </m:remarks>
         <m:root>EVERYTHING</m:root>
         <m:root>ASSEMBLY-1ONLY</m:root>
      </xs:appinfo>
   </xs:annotation>
   <xs:element name="EVERYTHING" type="everything:everything-ASSEMBLY"/>
   <xs:complexType name="everything-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>EVERYTHING</m:formal-name>
            <m:description>assembly everything</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>EVERYTHING</b>: assembly everything</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="field-1only"
                     type="everything:field-1only-FIELD"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:element name="field-base64"
                     type="everything:field-base64-FIELD"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:element name="field-boolean"
                     type="everything:field-boolean-FIELD"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:element name="field-named-value"
                     type="everything:field-named-value-FIELD"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:element name="markup-line"
                     type="everything:markup-line-FIELD"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:element name="field-groupable"
                     type="everything:field-groupable-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="wrapped-fields" minOccurs="0" maxOccurs="1">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="field-wrappable"
                              type="everything:field-wrappable-FIELD"
                              minOccurs="0"
                              maxOccurs="unbounded"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="field-by-key"
                     type="everything:field-by-key-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="field-dynamic-value-key"
                     type="everything:field-dynamic-value-key-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="wrapped-prose" minOccurs="0" maxOccurs="1">
            <xs:annotation>
               <xs:appinfo>
                  <m:formal-name>WRAPPED-PROSE</m:formal-name>
                  <m:description>field wrapped-prose</m:description>
               </xs:appinfo>
               <xs:documentation>
                  <b>WRAPPED-PROSE</b>: field wrapped-prose</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:group ref="everything:PROSE" maxOccurs="unbounded" minOccurs="0"/>
            </xs:complexType>
         </xs:element>
         <xs:group ref="everything:PROSE" maxOccurs="unbounded" minOccurs="0"/>
         <xs:element name="ASSEMBLY-1ONLY"
                     type="everything:assembly-1only-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:element name="assembly-groupable"
                     type="everything:assembly-groupable-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="wrapped-assemblies" minOccurs="0" maxOccurs="1">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="assembly-wrappable"
                              type="everything:assembly-wrappable-ASSEMBLY"
                              minOccurs="0"
                              maxOccurs="unbounded"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="assembly-by-key"
                     type="everything:assembly-by-key-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="EVERYTHING"
                     type="everything:everything-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>ID</m:formal-name>
               <m:description>flag id</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>ID</b>: flag id</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:complexType name="field-1only-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>FIELD-1ONLY</m:formal-name>
            <m:description>field field-1only</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>FIELD-1ONLY</b>: field field-1only</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string"/>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="field-base64-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>FIELD-BASE64</m:formal-name>
            <m:description>field field-base64</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>FIELD-BASE64</b>: field field-base64</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:base64Binary"/>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="field-boolean-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>FIELD-BOOLEAN</m:formal-name>
            <m:description>field field-boolean</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>FIELD-BOOLEAN</b>: field field-boolean</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="field-groupable-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>FIELD-GROUPABLE</m:formal-name>
            <m:description>field field-groupable</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>FIELD-GROUPABLE</b>: field field-groupable</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string"/>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="field-wrappable-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>FIELD-WRAPPABLE</m:formal-name>
            <m:description>field field-wrappable</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>FIELD-WRAPPABLE</b>: field field-wrappable</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string"/>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="field-by-key-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>FIELD-BY-KEY</m:formal-name>
            <m:description>field field-by-key</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>FIELD-BY-KEY</b>: field field-by-key</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute name="id" use="required" type="xs:string">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>ID</m:formal-name>
                     <m:description>flag id</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>ID</b>: flag id</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="field-named-value-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>FIELD-NAMED-VALUE</m:formal-name>
            <m:description>field field-named-value</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>FIELD-NAMED-VALUE</b>: field field-named-value</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute name="id" use="required" type="xs:string">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>ID</m:formal-name>
                     <m:description>flag id</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>ID</b>: flag id</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="field-dynamic-value-key-FIELD">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>FIELD-DYNAMIC-VALUE-KEY</m:formal-name>
            <m:description>field field-dynamic-value-key</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>FIELD-DYNAMIC-VALUE-KEY</b>: field field-dynamic-value-key</xs:documentation>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute name="id" use="required" type="xs:string">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>ID</m:formal-name>
                     <m:description>flag id</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>ID</b>: flag id</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute name="color" type="xs:string">
               <xs:annotation>
                  <xs:appinfo>
                     <m:formal-name>COLOR</m:formal-name>
                     <m:description>flag color</m:description>
                  </xs:appinfo>
                  <xs:documentation>
                     <b>COLOR</b>: flag color</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType mixed="true" name="markup-line-FIELD">
      <xs:group ref="everything:everything-inline"/>
   </xs:complexType>
   <xs:element name="ASSEMBLY-1ONLY" type="everything:assembly-1only-ASSEMBLY"/>
   <xs:complexType name="assembly-1only-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>ASSEMBLY-1ONLY</m:formal-name>
            <m:description>assembly assembly-1only</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>ASSEMBLY-1ONLY</b>: assembly assembly-1only</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="field-1only"
                     type="everything:field-1only-FIELD"
                     minOccurs="0"
                     maxOccurs="1"/>
         <xs:element name="ASSEMBLY-1ONLY"
                     type="everything:assembly-1only-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assembly-groupable-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>ASSEMBLY-GROUPABLE</m:formal-name>
            <m:description>assembly assembly-groupable</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>ASSEMBLY-GROUPABLE</b>: assembly assembly-groupable</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="field-groupable"
                     type="everything:field-groupable-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="assembly-groupable"
                     type="everything:assembly-groupable-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assembly-wrappable-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>ASSEMBLY-WRAPPABLE</m:formal-name>
            <m:description>assembly assembly-wrappable</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>ASSEMBLY-WRAPPABLE</b>: assembly assembly-wrappable</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="wrapped-fields" minOccurs="0" maxOccurs="1">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="field-wrappable"
                              type="everything:field-wrappable-FIELD"
                              minOccurs="0"
                              maxOccurs="unbounded"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="wrapped-assemblies" minOccurs="0" maxOccurs="1">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="assembly-wrappable"
                              type="everything:assembly-wrappable-ASSEMBLY"
                              minOccurs="0"
                              maxOccurs="unbounded"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assembly-by-key-ASSEMBLY">
      <xs:annotation>
         <xs:appinfo>
            <m:formal-name>ASSEMBLY-BY-KEY</m:formal-name>
            <m:description>assembly assembly-by-key</m:description>
         </xs:appinfo>
         <xs:documentation>
            <b>ASSEMBLY-BY-KEY</b>: assembly assembly-by-key</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="field-by-key"
                     type="everything:field-by-key-FIELD"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
         <xs:element name="assembly-by-key"
                     type="everything:assembly-by-key-ASSEMBLY"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:string">
         <xs:annotation>
            <xs:appinfo>
               <m:formal-name>ID</m:formal-name>
               <m:description>flag id</m:description>
            </xs:appinfo>
            <xs:documentation>
               <b>ID</b>: flag id</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:group name="PROSE">
      <xs:choice>
         <xs:element ref="oscal-prose:h1"/>
         <xs:element ref="oscal-prose:h2"/>
         <xs:element ref="oscal-prose:h3"/>
         <xs:element ref="oscal-prose:h4"/>
         <xs:element ref="oscal-prose:h5"/>
         <xs:element ref="oscal-prose:h6"/>
         <xs:element ref="oscal-prose:p"/>
         <xs:element ref="oscal-prose:ul"/>
         <xs:element ref="oscal-prose:ol"/>
         <xs:element ref="oscal-prose:pre"/>
         <xs:element ref="oscal-prose:table"/>
      </xs:choice>
   </xs:group>
   <xs:element name="h1">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h2">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h3">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h4">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h5">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="h6">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:inlines"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="p">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="pre">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="ol">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="oscal-prose:li"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="li">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:everything-inline"/>
            <xs:element ref="oscal-prose:ol"/>
            <xs:element ref="oscal-prose:ul"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="ul">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="oscal-prose:li"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="table">
      <xs:complexType>
         <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="oscal-prose:tr"/>
         </xs:sequence>
      </xs:complexType>
   </xs:element>
   <xs:element name="tr">
      <xs:complexType>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element maxOccurs="unbounded" ref="oscal-prose:td"/>
            <xs:element maxOccurs="unbounded" ref="oscal-prose:th"/>
         </xs:choice>
      </xs:complexType>
   </xs:element>
   <xs:element name="th">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="td">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:everything-inline"/>
      </xs:complexType>
   </xs:element>
   <xs:group name="everything-inline">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:group ref="oscal-prose:special"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:group name="mix">
      <xs:sequence>
         <xs:group minOccurs="0" maxOccurs="unbounded" ref="oscal-prose:inlines"/>
      </xs:sequence>
   </xs:group>
   <xs:group name="inlines">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="oscal-prose:q"/>
            <xs:element ref="oscal-prose:code"/>
            <xs:element ref="oscal-prose:em"/>
            <xs:element ref="oscal-prose:i"/>
            <xs:element ref="oscal-prose:strong"/>
            <xs:element ref="oscal-prose:b"/>
            <xs:element ref="oscal-prose:sub"/>
            <xs:element ref="oscal-prose:sup"/>
            <xs:element ref="oscal-prose:img"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:element name="q">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="oscal-prose:code"/>
            <xs:element ref="oscal-prose:em"/>
            <xs:element ref="oscal-prose:i"/>
            <xs:element ref="oscal-prose:b"/>
            <xs:element ref="oscal-prose:strong"/>
            <xs:element ref="oscal-prose:sub"/>
            <xs:element ref="oscal-prose:sup"/>
         </xs:choice>
      </xs:complexType>
   </xs:element>
   <xs:element name="code">
      <xs:complexType mixed="true">
         <xs:group ref="oscal-prose:mix"/>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="strong">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="em">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="i">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="b">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="oscal-prose:mix"/>
            <xs:element ref="oscal-prose:a"/>
         </xs:choice>
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="sub">
      <xs:complexType mixed="true">
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="sup">
      <xs:complexType mixed="true">
         <xs:attributeGroup ref="oscal-prose:optionalClass"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="img">
      <xs:complexType>
         <xs:attribute name="alt"/>
         <xs:attribute name="src" use="required" type="xs:anyURI"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="a">
      <xs:complexType mixed="true">
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="oscal-prose:q"/>
            <xs:element ref="oscal-prose:code"/>
            <xs:element name="em">
               <xs:complexType mixed="true">
                  <xs:attributeGroup ref="oscal-prose:optionalClass"/>
               </xs:complexType>
            </xs:element>
         </xs:choice>
         <xs:attribute name="href"/>
      </xs:complexType>
   </xs:element>
   <xs:group name="special">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="oscal-prose:insert"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:element name="insert">
      <xs:complexType>
         <xs:attribute name="param-id" use="required" type="xs:NCName"/>
      </xs:complexType>
   </xs:element>
   <xs:attributeGroup name="requiredClass"/>
   <xs:attributeGroup name="optionalClass"/>
   <xs:attributeGroup name="hrefAttr">
      <xs:attribute name="href"/>
   </xs:attributeGroup>
</xs:schema>
