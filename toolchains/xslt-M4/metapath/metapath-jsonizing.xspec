<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0" stylesheet="metapath-jsonize.xsl">
    <x:param name="definition-map" href="../testing/latest-definition-map.xml"/>
    
    <x:scenario label="Path to root">
        <x:call function="m:jsonize-path">
            <x:param>/</x:param>
        </x:call>
        <x:expect label="path to root" select="'/j:map'"/>
    </x:scenario>
    
    <x:scenario label="Problem case">
        <x:call function="m:jsonize-path">
            <x:param>wrapped-assemblies</x:param>
        </x:call>
        <x:expect label="structure XPath to root" select="'j:array[@key=''wrapped-assemblies'']'"/>
        <!-- to support json singleton-or-array -->
        <!--<x:expect label="structure XPath to root" select="'j:array[@key=''wrapped-assemblies'']/j:{$type} | j:{$type}[@key=''wrapped-assemblies'']'"/>-->
    </x:scenario>
    
    <!--<x:scenario label="Problem case">
        <x:call function="m:jsonization">
            <x:param>wrapped-assemblies</x:param>
        </x:call>
        <x:expect label="structure XPath to root" select="'j:array[@key=''wrapped-assemblies'']/j:map | j:map[@key=''wrapped-assemblies'']'"/>
    </x:scenario>-->
    
    <x:scenario label="Path to root (path map)">
        <x:call function="m:path-map">
            <x:param>/</x:param>
        </x:call>
        <x:expect label="structure XPath to root">
            <m:metapath xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0">
                <m:alternative>
                    <m:path>/</m:path>
                </m:alternative></m:metapath>
        </x:expect>
    </x:scenario>
    
    <x:scenario label="Path to root (mapped structure)">
        <x:call function="m:jsonization">
            <x:param>/</x:param>
        </x:call>
        <x:expect label="structured JSONized XPath to root">
            <m:metapath xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0"><m:alternative>
                <m:path>/j:map</m:path>
            </m:alternative></m:metapath>
        </x:expect>
    </x:scenario>
    
    <x:scenario label="Not a path">
        <x:call function="m:jsonize-path">
            <x:param>/(()))</x:param>
        </x:call>
        <x:expect label="An error report"
            select="'(: PARSING ''/(()))'' RETURNS syntax error, found '')'' while expecting EOF at line 1, column 6: ...)... :)'"/>
    </x:scenario>
    
    <x:scenario label="Nominal document element">
        <x:call function="m:jsonize-path">
            <x:param>/*</x:param>
        </x:call>
        <x:expect label="the definition map indicates two possible objects at the root"
            
            select="'/j:map/(j:map[@key=''EVERYTHING''] | j:map[@key=''ASSEMBLY-1ONLY''])'"/>
    </x:scenario>
    
    <x:scenario label="A field with flags">
        <x:call function="m:jsonize-path">
            <x:param>field-1only</x:param>
        </x:call>
        <x:expect label="The field becomes a map"
            
            select="'j:map[@key=''field-1only'']'"/>
    </x:scenario>
    
    <x:scenario label="Absolute path to specified document element">
        <x:call function="m:jsonize-path">
            <x:param>/EVERYTHING</x:param>
        </x:call>
        <x:expect label="only one path for a root"
            select="'/j:map/j:map[@key=''EVERYTHING'']'"/>
    </x:scenario>
    
    <x:scenario label="A path to a node not described in the definition map">
        <x:call function="m:jsonize-path">
            <x:param>/nothing</x:param>
        </x:call>
        <x:expect label="produces a no-op (path to nothing)"
            select="'/j:map/((: NOWHERE :))'"/>
    </x:scenario>
    
    <x:scenario label="Absolute path to document element, with predicate">
        <x:call function="m:jsonize-path">
            <x:param>/EVERYTHING[true()]</x:param>
        </x:call>
        <x:expect label="logical predicates are preserved"
            select="'/j:map/j:map[@key=''EVERYTHING''][true()]'"/>
    </x:scenario>
    
    <x:scenario label="Absolute path to document element, with predicate including a relative path">
        <x:call function="m:jsonize-path">
            <x:param>/EVERYTHING[field-1only/value()='x']</x:param>
        </x:call>
        <x:expect label="within the predicate a relative path must also be cast"
            select="'/j:map/j:map[@key=''EVERYTHING''][j:map[@key=''field-1only'']/j:string[@key=''STRVALUE'']=''x'']'"/>
    </x:scenario>
    
    <x:scenario label="Relative path to flag (path map)">
        <x:call function="m:path-map">
            <x:param>EVERYTHING/@id</x:param>
        </x:call>
        <x:expect label="structure XPath to root">
            <m:metapath xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0">
                <m:alternative>
                    <m:path>
                        <m:step>
                            <m:axis>child::</m:axis>
                            <m:node>EVERYTHING</m:node>
                        </m:step>/<m:step>
                            <m:axis>attribute::</m:axis>
                            <m:node>id</m:node>
                        </m:step>
                    </m:path>
                </m:alternative>
            </m:metapath>
        </x:expect>
    </x:scenario>
    
    <x:scenario label="Compound path to flags (path map)">
        <x:call function="m:path-map">
            <x:param>EVERYTHING/@id|field-named-value/@id</x:param>
        </x:call>
        <x:expect label="structure XPath to root">
            <m:metapath xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0">
                <m:alternative>
                    <m:path>
                        <m:step>
                            <m:axis>child::</m:axis>
                            <m:node>EVERYTHING</m:node>
                        </m:step>/<m:step>
                            <m:axis>attribute::</m:axis>
                            <m:node>id</m:node>
                        </m:step>
                    </m:path>
                </m:alternative>|<m:alternative>
                    <m:path>
                        <m:step>
                            <m:axis>child::</m:axis>
                            <m:node>field-named-value</m:node>
                        </m:step>/<m:step>
                            <m:axis>attribute::</m:axis>
                            <m:node>id</m:node>
                        </m:step>
                    </m:path>
                </m:alternative>
            </m:metapath>
        </x:expect>
    </x:scenario>
    <!--<x:scenario label="Absolute path to document element, with predicate including a relative path (mapped structure)">
        <x:call function="m:jsonization">
            <x:param>/EVERYTHING[field-1only/value()='x']</x:param>
        </x:call>
        <x:expect label="within the predicate a relative path must also be cast"
            select="''"/>
    </x:scenario>
    
    <x:scenario label="Absolute path to document element, with predicate including a relative path (path map)">
        <x:call function="m:path-map">
            <x:param>/EVERYTHING[field-1only/value()='x']</x:param>
        </x:call>
        <x:expect label="within the predicate a relative path must also be cast"
            select="''"/>
    </x:scenario>-->
    
    <x:scenario label="Absolute path showing two steps into a recursive structure">
        <x:call function="m:jsonize-path">
            <x:param>/EVERYTHING/EVERYTHING</x:param>
        </x:call>
        <x:expect label="from the root, the first step isolates a singleton"
            select="'/j:map/j:map[@key=''EVERYTHING'']/j:array[@key=''everything-recursive'']/j:map'"/>
    </x:scenario>

    <x:scenario label="Relative path showing three steps into a recursive structure">
        <x:call function="m:jsonize-path">
            <x:param>EVERYTHING/EVERYTHING/EVERYTHING</x:param>
        </x:call>
        <x:expect label="in a relative path each step shows all possibilities at that step"
            select="'(j:map[@key=''EVERYTHING''] | j:array[@key=''everything-recursive'']/j:map)/j:array[@key=''everything-recursive'']/j:map/j:array[@key=''everything-recursive'']/j:map'"/>
    </x:scenario>

</x:description>
