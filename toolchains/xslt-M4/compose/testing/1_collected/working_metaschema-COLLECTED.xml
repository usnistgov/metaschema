<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
            module="...">
   <schema-name module="...">OSCAL TEST Format</schema-name>
   <schema-version module="...">0.0</schema-version>
   <short-name module="...">oscal-test</short-name>
   <namespace module="...">http://csrc.nist.gov/ns/metaschema/test</namespace>
   <remarks module="...">
      <p module="...">For exercising Metaschema semantics with respect to modular assembly and composition.</p>
   </remarks>
   <METASCHEMA abstract="yes"
               module="...">
      <schema-name module="...">OSCAL Control Catalog Format</schema-name>
      <schema-version module="...">1.0.0-milestone3</schema-version>
      <short-name module="...">oscal-catalog</short-name>
      <namespace module="...">http://csrc.nist.gov/ns/metaschema/test</namespace>
      <remarks module="...">
         <p module="...">For exercising Metaschema semantics with respect to modular assembly and composition.</p>
      </remarks>
      <define-assembly name="module-assembly" module="...">
         <formal-name module="...">Assembly defined in a module</formal-name>
         <description module="...">XXX</description>
         <define-flag name="local-flag" module="...">
            <formal-name module="...">Locally defined flag</formal-name>
            <description module="...">XXX</description>
         </define-flag>
         <model module="...">
            <field ref="module-global-field" module="..."/>
            <field ref="module-top-level-local-field" module="..."/>
            <define-field name="module-local-field" module="...">
               <formal-name module="...">Locally defined field</formal-name>
               <description module="...">XXX</description>
            </define-field>
         </model>
      </define-assembly>
      <define-field name="module-global-field" module="...">
         <formal-name module="...">Field, defined in a module (global by default)</formal-name>
         <description module="...">XXX</description>
      </define-field>
      <define-field name="module-top-level-local-field" scope="local" module="...">
         <formal-name module="...">Field, defined in a module as 'local'</formal-name>
         <description module="...">XXX</description>
      </define-field>
   </METASCHEMA>
   <define-assembly name="root" module="...">
      <formal-name module="...">Nominal root</formal-name>
      <description module="...">XXX</description>
      <root-name module="...">root-assembly</root-name>
      <flag ref="top-level-flag" module="..."/>
      <define-flag name="local-flag" module="...">
         <formal-name module="...">Locally defined flag</formal-name>
         <description module="...">XXX</description>
      </define-flag>
      <model module="...">
         <field ref="top-level-global-field" module="..."/>
         <field ref="top-level-local-field" module="..."/>
         <define-field name="local-field" module="...">
            <formal-name module="...">Locally defined field</formal-name>
            <description module="...">XXX</description>
         </define-field>
      </model>
   </define-assembly>
   <define-field name="top-level-global-field" module="...">
      <formal-name module="...">Field, defined at top level (global by default)</formal-name>
      <description module="...">XXX</description>
   </define-field>
   <define-field name="top-level-local-field" scope="local" module="...">
      <formal-name module="...">Field, defined at top level as 'local'</formal-name>
      <description module="...">XXX</description>
   </define-field>
   <define-flag name="top-level-flag" module="...">
      <formal-name module="...">Flag, defined at top level</formal-name>
      <description module="...">XXX</description>
   </define-flag>
</METASCHEMA>
