<?xml version="1.0" encoding="UTF-8"?>
<x:description stylesheet="../../metaschema-prune-unused-definitions.xsl"
               run-as="external"
               xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
               xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
               xmlns:mv="http://csrc.nist.gov/ns/metaschema/test/variable">
   
   <!-- no need for helper <x:helper stylesheet="../metaschema-test-helper.xsl"/> -->
   
   <x:scenario label="When presented with unused definitions in a metaschema source">
      <x:context>
         <METASCHEMA module="nestedmessy">
            <define-assembly name="unused-assembly" module="nestedmessy" _key-name="nestedmessy:unused-assembly">
               <formal-name>Unused assembly</formal-name>
               <description>Unused assembly</description>
               <model>
                  <field max-occurs="1" min-occurs="0" ref="unused-field" _key-ref="nestedmessy:unused-field"/>
               </model>
            </define-assembly>
            <define-assembly name="BOX" module="nestedmessy" _key-name="nestedmessy:BOX">
               <formal-name>BOX</formal-name>
               <description>An empty box</description>
               <root-name>BOX</root-name>
               <model/>
            </define-assembly>
            <define-field as-type="string" name="unused-field" module="nestedmessy" _key-name="nestedmessy:unused-field">
               <formal-name>Unused field</formal-name>
               <description>Unused field</description>
            </define-field>
         </METASCHEMA>
      </x:context>
      <x:expect label="the unused definitions are detected and replaced">
         <METASCHEMA module="nestedmessy">
            <INFO info-type="objects-used">Seeing assembly#nestedmessy:BOX</INFO>
            <EXCEPTION problem-type="unused-definition">REMOVING unused assembly definition for 'unused-assembly' from nestedmessy.</EXCEPTION>
            <define-assembly name="BOX" module="nestedmessy" _key-name="nestedmessy:BOX">
               <formal-name>BOX</formal-name>
               <description>An empty box</description>
               <root-name>BOX</root-name>
               <model/>
            </define-assembly>
            <EXCEPTION problem-type="unused-definition">REMOVING unused field definition for 'unused-field' from nestedmessy.</EXCEPTION>
         </METASCHEMA>
      </x:expect>
      <x:expect label="exactly two unused definitions are reported as exceptions" test="count(//m:EXCEPTION[@problem-type='unused-definition']) eq 2"/>
      <x:expect label="an exception is reported for the unused assembly" test="//m:EXCEPTION[@problem-type='unused-definition'] = 'REMOVING unused assembly definition for ''unused-assembly'' from nestedmessy.'"/>
      <x:expect label="an exception is reported for the unused field" test="//m:EXCEPTION[@problem-type='unused-definition'] = 'REMOVING unused field definition for ''unused-field'' from nestedmessy.'"/>
      <x:expect label="no assembly is defined for an assembly named 'unused-assembly'" test="empty(//m:define-assembly[@name='unused-assembly'])"/>
      <x:expect label="no field is defined for a field named 'unused field'" test="empty(//m:define-field[@name='unused-field'])"/>
   </x:scenario>
</x:description>
