<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:m="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
    schematron="..//metaschema-composition-check.sch" run-as="external">
    <x:param name="allow-foreign">true</x:param>
    <x:param name="full-path-notation">1</x:param>
    <!-- Basic starter XSpec shows both callout and inline scenarios. -->
    <x:scenario label="Metaschema Header">
        <x:scenario label="Check short-name:">
            <x:scenario label="Valid short-name">
                <x:context>
                    <METASCHEMA xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
                        abstract="yes">
                        <short-name>boohoo</short-name>
                    </METASCHEMA>
                </x:context>
                <x:expect-rule id="rule-metaschema-header"/>
                <x:expect-not-assert id="require-short-name"/>
                <x:expect-valid/>
            </x:scenario>

            <x:scenario label="Missing short-name">
                <x:context>
                    <METASCHEMA xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"/>
                </x:context>
                <x:expect-rule id="rule-metaschema-header"/>
                <x:expect-assert id="require-short-name"/>
            </x:scenario>

            <x:scenario label="Duplicate short-name">
                <x:context href="instances/duplicate-short-name_top-level_metaschema.xml"/>
                <x:expect-rule id="rule-metaschema-header"/>
                <x:expect-not-assert id="require-short-name"/>
                <x:expect-report id="require-unique-short-names"/>
            </x:scenario>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Check imports">
        <x:context href="instances/circular-import_top-level_metaschema.xml"/>
        <x:expect-rule id="rule-metaschema-header-import"/>
        <x:expect-report id="detect-circular-import" location="/*:METASCHEMA[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]/*:import[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]"/>
        <x:expect-report id="detect-circular-import" location="/*:METASCHEMA[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]/*:import[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][2]"/>
    </x:scenario>

    <x:scenario label="Check root definitions">
        <x:scenario label="Root present">
            <x:context>
                <METASCHEMA xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0">
                    <schema-name>Test Metaschema</schema-name>
                    <schema-version>0.0</schema-version>
                    <short-name>test</short-name>
                    <define-assembly name="root">
                        <formal-name>Root</formal-name>
                        <description>A root element.</description>
                        <root-name>root</root-name>
                    </define-assembly>
                </METASCHEMA>
            </x:context>
            <x:expect-rule id="rule-metaschema-header"/>
            <x:expect-not-assert id="expect-root-assembly-for-top-level"/>
            <x:expect-valid/>
        </x:scenario>

        <x:scenario label="Abstract and root not present">
            <x:context>
                <METASCHEMA xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0" abstract="yes">
                    <schema-name>Test Metaschema</schema-name>
                    <schema-version>0.0</schema-version>
                    <short-name>test</short-name>
                </METASCHEMA>
            </x:context>
            <x:expect-rule id="rule-metaschema-header"/>
            <x:expect-not-assert id="expect-root-assembly-for-top-level"/>
            <x:expect-valid/>
        </x:scenario>

        <x:scenario label="Root not present">
            <x:context>
                <METASCHEMA xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0">
                    <schema-name>Test Metaschema</schema-name>
                    <schema-version>0.0</schema-version>
                    <short-name>test</short-name>
                </METASCHEMA>
            </x:context>
            <x:expect-rule id="rule-metaschema-header"/>
            <x:expect-assert id="expect-root-assembly-for-top-level"/>
        </x:scenario>
    </x:scenario>

    <x:scenario label="Check name clash detection">
        <x:scenario label="Check definition clashes:">
            <x:scenario label="Ambiguity due to short-name clash">
                <x:context href="instances/duplicate-short-name_top-level_metaschema.xml"/>
                <x:expect-rule id="rule-metaschema-header"/>
                <x:expect-not-assert id="require-short-name"/>
                <x:expect-report id="require-unique-short-names"/>

                <x:expect-rule id="rule-name-clash-definitions"/>
                <x:expect-assert id="require-unambiguous-definitions"
                    location="/*:METASCHEMA[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]/*:define-flag[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]"/>

                <x:expect-rule id="rule-name-clash-instances"/>
                <x:expect-assert id="require-unambiguous-reference-in-composition"
                    location="/*:METASCHEMA[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]/*:define-assembly[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]/*:flag[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]"/>
            </x:scenario>
            <x:scenario label="Shadowing of imported definitions">
                <x:context href="instances/shadow-importing_metaschema.xml"/>
                <x:expect-rule id="rule-definition-shadowing"/>
                <x:expect-assert id="detect-shadowed-definitions"
                    role="warning"
                    location="/*:METASCHEMA[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]/*:define-flag[namespace-uri()='http://csrc.nist.gov/ns/oscal/metaschema/1.0'][1]"/>
            </x:scenario>
        </x:scenario>
        <!--<x:scenario label="Check instance clashes:">
        </x:scenario>-->
    </x:scenario>
        <!--
        <x:scenario label="Seeing any name clashes">
            <!-\-<x:expect-not-assert
                label="An assert that shouldn't be triggered on a speciffic location" id="a001"
                location="/article[1]/section[1]"/>-\->
            <x:expect-not-assert label="No name clash found"
                id="detect-xml-sibling-name-clash"/>
            
            <!-\-<x:expect-report/>-\->
            <!-\-<x:expect-not-report/>-\->
        </x:scenario>
-->
</x:description>
