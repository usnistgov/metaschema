name: Generate Website
on:
  workflow_call:
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires the access_token to be passed'
        required: false
        default: false
        type: boolean
      bad_links_fail_build:
        description: 'a boolean flag that determines if bad links found by the link checker fail fast and stop a complete build'
        required: false
        default: true
        type: boolean
    secrets:
      access_token:
        description: 'the access token to use for commits'
        required: false
  workflow_dispatch:
    branches:
    - main
    - develop
    - "release-*"
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires a PAT defined as secrets.COMMIT_TOKEN'
        required: true
        default: false
        type: boolean
      bad_links_fail_build:
        description: 'a boolean flag that determines if bad links found by the link checker fail fast and stop a complete build'
        required: false
        default: true
        type: boolean
      create_issue:
        description: 'create new GitHub issue if broken links found'
        required: false
        default: false
        type: boolean
jobs:
  build-and-push-website:
    name: Build and Push Website
    runs-on: ubuntu-20.04
    env:
      JAVA_CLASSPATH: ${{ github.workspace}}/lib
      BUILD_PATH: ./build
      CICD_PATH: ./build/ci-cd
    steps:
    # use this for builds triggered from the UI on protected branches
    - name: Checkout Latest (using COMMIT_TOKEN)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.commit_resources == 'true'
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      with:
        token: ${{ secrets.COMMIT_TOKEN }}
        submodules: recursive
      id: checkout_latest_workflow
    # use this for builds triggered from other workflows on protected branches
    - name: Checkout Latest (using access_token)
      if: github.event_name == 'push' && inputs.commit_resources == true
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      with:
        token: ${{ secrets.access_token }}
        submodules: recursive
      id: checkout_latest_push
    # use this for overything else (i.e., pull requests) where publication is not needed
    - name: Checkout Latest
      if: steps.checkout_latest_workflow.conclusion == 'skipped' && steps.checkout_latest_push.conclusion == 'skipped'
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      with:
        submodules: recursive
    - name: Set env
      run: |
        echo "SAXON_HOME=${JAVA_CLASSPATH}" >> $GITHUB_ENV
        echo "CALABASH_HOME=${JAVA_CLASSPATH}" >> $GITHUB_ENV
    # Setup runtime environment
    # -------------------------
    # Java JDK 11
    - name: Set up JDK
      uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2
      with:
        java-version: 11
        distribution: 'temurin'
        cache: 'maven'
    - name: Install JDK Deps Saxon and XML Calabash
      run: |
        cd "${BUILD_PATH}"
        mkdir -p "${JAVA_CLASSPATH}"
        mvn dependency:copy-dependencies -DoutputDirectory="${JAVA_CLASSPATH}"
    - name: Setup Swap Space
      # Since Hugo is requiring more memory
      uses: pierotofy/set-swap-space@49819abfb41bd9b44fb781159c033dba90353a7c
      with:
        swap-size-gb: 10
    # Install Hugo
    - name: Store Hugo Executable in Cache
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
      with:
        path: /home/runner/go/bin/hugo
        key: ${{ runner.os }}-hugo-${{ hashFiles(format('{0}/go.sum', env.BUILD_PATH)) }}
      id: cache-hugo
    - name: Add Cached Hugo Executable to PATH
      if: steps.cache-hugo.outputs.cache-hit == 'true'
      run: |
        echo "/home/runner/go/bin" >> $GITHUB_PATH
    - name: Setup Golang
      if: steps.cache-hugo.outputs.cache-hit != 'true'
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
      with:
        go-version-file: '${{ env.BUILD_PATH }}/go.mod'
        cache: true
        cache-dependency-path: '${{ env.BUILD_PATH }}/go.sum'
    - name: Set up NodeJS
      uses: actions/setup-node@bea5baf987ba7aa777a8a0b4ace377a21c45c381
      with:
        node-version-file: 'build/.nvmrc'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
    - name: Setup Dependencies
      run: |
        # NodeJS
        # If you are a developer and need to modify the workflow, be sure to review
        # the package.json and package-lock.json to ensure the following deps are
        # at least installed (they will be updated by dependabot):
        # - ajv-cli
        # - ajv-formats
        # - markdown-link-check
        # - yaml-convert
        npm install --loglevel verbose
        echo "$PWD/node_modules/.bin/" >> $GITHUB_PATH
        # Dart-Sass
        sudo snap install dart-sass
    - name: Install Hugo
      if: steps.cache-hugo.outputs.cache-hit != 'true'
      run: |
        cd "${{ env.BUILD_PATH }}"
        go install -tags "extended" github.com/gohugoio/hugo
    - name: Install Dart Sass Embedded
      run: sudo snap install dart-sass-embedded
    - name: Run Hugo
      run: |
        hugo --config "config.yaml,development-config.yaml" -v --debug --minify
      working-directory: ${{ github.workspace }}/website
    - name: Zip Artifacts for Upload
      run: |
        zip ${{ runner.temp }}/metaschema-website.zip -r public/
      working-directory: ${{ github.workspace }}/website
    - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
      with:
        name: website
        path: |
          ${{ runner.temp }}/metaschema-website.zip
        retention-days: 5
    - name: Link Checker
      id: linkchecker
      uses: lycheeverse/lychee-action@ec3ed119d4f44ad2673a7232460dc7dff59d2421
      with:
        args: --exclude-file ./build/config/.lycheeignore --verbose --no-progress --accept 200,206,429 './website/public/**/*.html' --remap "https://pages.nist.gov/metaschema/ file://${GITHUB_WORKSPACE}/website/public/" --exclude-mail
        format: markdown
        output: html-link-report.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
      with:
        name: html-link-report
        path: html-link-report.md
        retention-days: 5
    - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      if: steps.linkchecker.outputs.exit_code != 0
      with:
        script: |
          core.setFailed('Link checker detected broken or invalid links, read attached report.')
    - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      if: steps.linkchecker.outputs.exit_code != 0 && (github.event.inputs.bad_links_fail_build == 'true' || inputs.bad_links_fail_build == true)
      with:
        script: |
          core.setFailed('Link checker detected broken or invalid links, read attached report.')
    - name: Deploy Website (using access_token)
      uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847
      if: github.event_name == 'push' && inputs.commit_resources == true && github.ref_name == 'main'
      with:
        github_token: ${{ secrets.access_token }}
        enable_jekyll: false
        publish_dir: ./website/public
        publish_branch: nist-pages
        commit_message: Deploying website [ci deploy skip]
    - name: Deploy Website (using COMMIT_TOKEN)
      uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.commit_resources == 'true' && github.ref_name == 'main'
      with:
        github_token: ${{ secrets.COMMIT_TOKEN }}
        enable_jekyll: false
        publish_dir: ./website/public
        publish_branch: nist-pages
        commit_user_name: GitHub Actions Bot
        commit_user_email: metaschema@nist.gov
        commit_author: GitHub Actions Bot <metaschema@nist.gov>
        commit_message: Deploying website [ci deploy skip]
