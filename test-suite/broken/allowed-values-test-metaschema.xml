<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../../support/lib/metaschema-author.css"?>
<?xml-model href="../../toolchains/xslt-M4/validate/metaschema-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://csrc.nist.gov/ns/oscal/metaschema/1.0 ../../support/lib/metaschema.xsd"
 xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0">
    <schema-name>Test Metaschema</schema-name>
    <schema-version>1.0</schema-version>
    <short-name>anthology</short-name>
    <namespace>http://csrc.nist.gov/metaschema/ns/test</namespace>
   
    <define-field name="item">
        <formal-name>Item</formal-name>
        <description>A member of a sequence</description>
        <flag ref="type"/>
        <define-flag name="id"/>
        <define-flag name="class"/>
        <constraint>
            <allowed-values target="." allow-other="no" id="G1">
                <enum value="A">a</enum>
                <enum value="B">b</enum>
                <enum value="C">c</enum>
            </allowed-values>
            <require when="@class='aorb'">
                <allowed-values target="." allow-other="no" id="G2">
                    <enum value="A">a</enum>
                    <enum value="B">b</enum>
                </allowed-values>
            </require>
        </constraint>
    </define-field>
    
    <define-assembly name="sequences">
        <formal-name>Sequences</formal-name>
        <description>Several sequences, in sequence</description>
        <root-name>SEQUENCES</root-name>
        <model>
            <assembly ref="sequence" max-occurs="unbounded">
                <group-as name="sequences"/>
            </assembly>
        </model>
    </define-assembly>
    
    <define-assembly name="sequence">
        <formal-name>Sequence</formal-name>
        <description>A series of items</description>
        <model>
            <field ref="item" max-occurs="unbounded">
                <group-as name="items" in-json="SINGLETON_OR_ARRAY"/>
            </field>
            <assembly ref="subsequence" max-occurs="unbounded">
                <group-as name="subsequences"/>
            </assembly>
        </model>
        <constraint>
            <allowed-values target=".//item[@type='number']" allow-other="yes" id="T1">
                <enum value="1">one</enum>
                <enum value="2">two</enum>
                <enum value="3">three</enum>
            </allowed-values>
            
            <!-- Extends is not implemented: which definition(s) does this extend?
                 possibilities include global and local definitions for 'item' -->
            <allowed-values target=".//item[@type='german']" id="T2">
                <!-- should this produce a rule applicable to .//subsequence/item[@type='german'] ?  (yes) -->
                <enum value="Ä">a umlaut</enum>
                <enum value="Ö">o umlaut</enum>
                <enum value="Ü">u umlaut</enum>
            </allowed-values>
            
            <allowed-values target=".//subsequence//item" id="T3">
                <!-- which 'allowed-values' will this extend? Any? note that subsequence/item is defined locally.
                     If this rule applies, what are the respective sets for subsequence/item[@type='color']-->
                <enum value="pink">pink</enum>
                <enum value="orange">orange</enum>
                <enum value="purple">purple</enum>
            </allowed-values>
        </constraint>
    </define-assembly>
    
    <define-assembly name="subsequence">
        <formal-name>Subsequence</formal-name>
        <description>More sequences</description>
        <model>
            <!--<assembly ref="sequence"/>-->
            <define-field name="item" max-occurs="unbounded">
<!-- Q: does this local field declaration overlap in any way with other declarations of 'item'?
     if not, must not other rules for other allowed-values make an exception for subsequence/item? -->
                <formal-name>Subsequence item</formal-name>
                <description>An item in a sequence in a sequence</description>
                <group-as name="items"/>
                <constraint>
                        <allowed-values target="." id="L1">
                            <enum value="red">red</enum>
                            <enum value="blue">blue</enum>
                            <enum value="green">green</enum>
                        </allowed-values>
                </constraint>
            </define-field>
            <assembly ref="subsequence" max-occurs="unbounded">
                <group-as name="subsequences"/>
            </assembly>
        </model>
    </define-assembly>
    
    <define-flag name="type">
        <formal-name>Item type</formal-name>
        <description>Characterizes the type of item</description>
    </define-flag>
</METASCHEMA>