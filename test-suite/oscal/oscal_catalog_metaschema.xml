<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../toolchains/xslt-M4/validate/metaschema-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<!-- OSCAL CATALOG METASCHEMA -->
<!-- validate with XSD and Schematron (linked) -->
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
            xsi:schemaLocation="http://csrc.nist.gov/ns/oscal/metaschema/1.0 ../../toolchains/xslt-M4/validate/metaschema.xsd">
   <schema-name>OSCAL Control Catalog Format</schema-name>
   <schema-version>1.0.0-milestone3</schema-version>
   <short-name>oscal-catalog</short-name>
   <namespace>http://csrc.nist.gov/ns/oscal/1.0</namespace>
   <remarks>
      <p>The OSCAL Control Catalog format can be used to describe a collection of security controls and related control enhancements, along with contextualizing documentation and metadata. The root of the Control Catalog format is <code>catalog</code>.</p>
   </remarks>
   <import href="oscal_control-common_metaschema.xml"/>
   <import href="oscal_metadata_metaschema.xml"/>
   <define-assembly name="catalog">
      <formal-name>Catalog</formal-name>
      <description>A collection of controls.</description>
      <root-name>catalog</root-name>
      <define-flag name="uuid" as-type="uuid" required="yes">
         <formal-name>Catalog Universally Unique Identifier</formal-name>
         <description>A globally unique identifier for this catalog instance. This UUID should be changed when this document is revised.</description>
      </define-flag>

      <model>
         <assembly ref="metadata" min-occurs="1"/>
         <assembly ref="parameter" max-occurs="unbounded">
            <use-name>param</use-name>
            <group-as name="parameters" in-json="ARRAY"/>
         </assembly>
         <assembly ref="control" max-occurs="unbounded">
            <group-as name="controls" in-json="ARRAY"/>
         </assembly>
         <assembly ref="group" max-occurs="unbounded">
            <group-as name="groups" in-json="ARRAY"/>
         </assembly>
         <assembly ref="back-matter">
            <remarks>
               <p>Back matter including references and resources.</p>
            </remarks>
         </assembly>
      </model>
      <remarks>
         <p>Catalogs may use one or more <code>group</code> objects to subdivide the control contents of a catalog.</p>
         <p>An OSCAL catalog model provides a structured representation of control information.</p>
      </remarks>
      <example>
         <description>A small catalog with a single control</description>
         <catalog xmlns="http://csrc.nist.gov/ns/oscal/example"
                  id="simple-example"
                  model-version="0.99">
            <title>A Miniature Catalog</title>
            <control id="single">
               <title>A Single Control</title>
            </control>
         </catalog>
      </example>
   </define-assembly>
   <define-assembly name="group">
      <formal-name>Control Group</formal-name>
      <description>A group of controls, or of groups of controls.</description>
      <define-flag name="id" as-type="NCName">
         <formal-name>Group Identifier</formal-name>
         <description>A unique identifier for a specific group instance that can be used to reference the group within this and in other OSCAL documents. This identifier's uniqueness is document scoped and is intended to be consistent for the same group across minor revisions of the document.</description>
      </define-flag>
      <define-flag name="class" as-type="NCName">
         <formal-name>Group Class</formal-name>
         <description>A textual label that provides a sub-type or characterization of the group.</description>
         <remarks>
            <p>A <code>class</code> can be used in validation rules to express extra constraints over named items of a specific <code>class</code> value.</p>
            <p>A <code>class</code> can also be used in an OSCAL profile as a means to target an alteration to control content.</p>
         </remarks>
      </define-flag>
      <model>
         <define-field name="title" as-type="markup-line" min-occurs="1">
            <formal-name>Group Title</formal-name>
            <description>A name given to the group, which may be used by a tool for display and navigation.</description>
         </define-field>
         <assembly ref="parameter" max-occurs="unbounded">
            <use-name>param</use-name>
            <group-as name="parameters" in-json="ARRAY"/>
         </assembly>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
         </assembly>
         <assembly ref="part" max-occurs="unbounded">
            <group-as name="parts" in-json="ARRAY"/>
         </assembly>
         <choice>
            <assembly ref="group" max-occurs="unbounded">
               <group-as name="groups" in-json="ARRAY"/>
            </assembly>
            <assembly ref="control" max-occurs="unbounded">
               <group-as name="controls" in-json="ARRAY"/>
            </assembly>
         </choice>
         <any/>
      </model>
      <remarks>
         <p>Catalogs can use a <code>group</code> to collect related controls into a single grouping. That can be useful to group controls into a family or other logical grouping.</p>
         <p>A <code>group</code> may have its own properties, statements, parameters, and references, which are inherited by all members of that group.</p>
      </remarks>
      <example>
         <group xmlns="http://csrc.nist.gov/ns/oscal/example" id="xyz">
            <title>My Group</title>
            <prop class="required">some property</prop>
            <control id="xyz1">
               <title>Control</title>
            </control>
         </group>
      </example>
   </define-assembly>
   <define-assembly name="control">
      <formal-name>Control</formal-name>
      <description>A structured information object representing a security or privacy control. Each security or privacy control within the Catalog is defined by a distinct control instance.</description>
      <define-flag name="id" as-type="NCName" required="yes">
         <formal-name>Control Identifier</formal-name>
         <description>A unique identifier for a specific control instance that can be used to reference the control in other OSCAL documents. This identifier's uniqueness is document scoped and is intended to be consistent for the same control across minor revisions of the document.</description>
      </define-flag>
      <define-flag name="class" as-type="NCName">
         <formal-name>Control Class</formal-name>
         <description>A textual label that provides a sub-type or characterization of the control.</description>
         <remarks>
            <p>A <code>class</code> can be used in validation rules to express extra constraints over named items of a specific <code>class</code> value.</p>
            <p>A <code>class</code> can also be used in an OSCAL profile as a means to target an alteration to control content.</p>
         </remarks>
      </define-flag>
      <model>
         <define-field name="title" as-type="markup-line" min-occurs="1">
            <formal-name>Control Title</formal-name>
            <description>A name given to the control, which may be used by a tool for display and navigation.</description>
         </define-field>
         <assembly ref="parameter" max-occurs="unbounded">
            <use-name>param</use-name>
            <group-as name="parameters" in-json="ARRAY"/>
         </assembly>
         <!-- TODO: Need to be able to add valid values in context -->
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
         </assembly>
         <assembly ref="part" max-occurs="unbounded">
            <group-as name="parts" in-json="ARRAY"/>
         </assembly>
         <assembly ref="control" max-occurs="unbounded">
            <group-as name="controls" in-json="ARRAY"/>
         </assembly>
         <!--<assembly named="ref-list"/>-->
         <any/>
      </model>
      <constraint>
         <allowed-values target="prop/@name" allow-other="yes">
            <enum value="label">A human-readable label for the parent context.</enum>
            <enum value="sort-id">An alternative identifier, whose value is easily sortable among other such values in the document.</enum>
            <enum value="status">The status of a <code>control</code>. For example, a value of 'withdrawn' can indicate that the <code>control</code> has been withdrawn and should no longer be used.</enum>
         </allowed-values>
         <allowed-values target="prop[@name='status']/value()">
            <enum value="withdrawn">The control is no longer used.</enum>
         </allowed-values>
      </constraint>
      <remarks>
         <p>Controls may be grouped using <code>group</code>, and controls may be partitioned using <code>part</code> or further enhanced (extended) using <code>control</code>.</p>
      </remarks>
      <example>
         <control xmlns="http://csrc.nist.gov/ns/oscal/example" id="x">
            <title>Control 1</title>
         </control>
      </example>
   </define-assembly>
</METASCHEMA>
