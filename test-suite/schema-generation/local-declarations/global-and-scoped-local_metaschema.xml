<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../../toolchains/xslt-M4/validate/metaschema-composition-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<!-- OSCAL CATALOG METASCHEMA -->
<!-- validate with XSD and Schematron (linked) -->
<METASCHEMA xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0">
   <schema-name>Metaschema Unit Test: group-as</schema-name>
   <schema-version>1.0-milestone1</schema-version>
   <short-name>metaschema-group-as</short-name>
   <namespace>http://csrc.nist.gov/ns/metaschema/unit-test/group-as-singleton-or-array-optional</namespace>
   <json-base-uri>http://csrc.nist.gov/ns/metaschema/unit-test/group-as-singleton-or-array-optional</json-base-uri>
   <define-assembly name="parent">
      <formal-name>parent</formal-name>
      <description>parent assembly</description>
      <root-name>parent</root-name>
      <define-flag name="local-flag" as-type="string">
         <formal-name>Flag defined locally</formal-name>
         <description>Has a local definition</description>
      </define-flag>
      <flag ref="global-flag"/>
      <model>
         <field    ref="global-field"/>
         <field    ref="top-level-local-field"/>
         <assembly ref="top-level-local-assembly"/>
         <assembly ref="global-assembly"/>
      </model>
   </define-assembly>
   <define-field name="top-level-local-field" as-type="string" scope="local">
      <formal-name>Field defined with scope='local', at top level</formal-name>
      <description>Should result in a local definition</description>
   </define-field>
   <define-assembly name="top-level-local-assembly" scope="local">
      <formal-name>Assembly defined with scope='local', at top level</formal-name>
      <description>Should result as local</description>
      <model>
         <field ref="top-level-local-field"/>
         <field ref="global-field"/>
      </model>
   </define-assembly>   
   <define-flag name="global-flag" as-type="string">
      <formal-name>Flag defined globally</formal-name>
      <description>Has a global definition</description>
   </define-flag>
   <define-field name="global-field" as-type="string">
      <formal-name>Field defined globally</formal-name>
      <description>Has a global definition</description>
   </define-field>
   <define-assembly name="global-assembly">
      <formal-name>Assembly defined globally</formal-name>
      <description>Has a global definition</description>
      <model>
         <define-field name="local-field2" as-type="string">
            <formal-name>Field defined locally</formal-name>
            <description>Has a local definition</description>
         </define-field>
         <field ref="global-field"/>
      </model>
   </define-assembly>
</METASCHEMA>
