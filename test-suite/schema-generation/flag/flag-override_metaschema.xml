<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../../toolchains/xslt-M4/validate/metaschema-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<!-- OSCAL CATALOG METASCHEMA -->
<!-- validate with XSD and Schematron (linked) -->
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
            xsi:schemaLocation="../../../toolchains/xslt-M4/validate/metaschema.xsd">
   <schema-name>Metaschema Unit Test: flag: basic flag</schema-name>
   <schema-version>1.0-milestone1</schema-version>
   <short-name>metaschema-group-as</short-name>
   <namespace>http://csrc.nist.gov/ns/oscal/unit-testing/flag-basic</namespace>
   <define-assembly name="parent">
      <formal-name>parent</formal-name>
      <description>parent assembly</description>
      <root-name>parent</root-name>
      <model>
         <assembly ref="child1"/>
         <assembly ref="child2"/>
         <define-field name="propB">
            <formal-name>propB field</formal-name>
            <description>propB field ... </description>
            <define-flag name="name">
               <formal-name>name flag</formal-name>
               <description>name flag ... </description>
               <constraint>
                  <allowed-values>
                     <enum value="z">Z</enum>
                  </allowed-values>
               </constraint>
            </define-flag>
         </define-field>
      </model>
   </define-assembly>
   <define-assembly name="child1">
      <formal-name>Child 1</formal-name>
      <description>A child with a unique set of properties.</description>
      <model>
         <define-field name="propA">
            <formal-name>propA field</formal-name>
            <description>propA field ... </description>
            <define-flag name="name">
               <formal-name>name flag</formal-name>
               <description>name flag ... </description>
               <constraint>
                  <allowed-values>
                     <enum value="e">E</enum>
                     <enum value="f">F</enum>
                  </allowed-values>
               </constraint>
            </define-flag>
         </define-field>
      </model>
   </define-assembly>
   <define-assembly name="child2">
      <formal-name>Child 2</formal-name>
      <description>A child with a unique set of properties.</description>
      <model>
         <define-field name="propA">
            <formal-name>propA field</formal-name>
            <description>propA field ... </description>
            <define-flag name="name">
               <formal-name>name flag</formal-name>
               <description>name flag ... </description>
               <constraint>
                  <allowed-values>
                     <enum value="g">G</enum>
                     <enum value="h">H</enum>
                  </allowed-values>
               </constraint>
            </define-flag>
         </define-field>
      </model>
   </define-assembly>
   <!--<define-field name="propA">
      <formal-name>Property A</formal-name>
      <description>A property with a name.</description>
      <define-flag name="name">
         <formal-name>Property Name</formal-name>
         <description>With valid values</description>
         <constraint>
            <allowed-values>
               <enum value="a">A</enum>
               <enum value="b">B</enum>
            </allowed-values>
         </constraint>
      </define-flag>
   </define-field>
   <define-field name="propB">
      <formal-name>Property B</formal-name>
      <description>A property with a name.</description>
      <flag ref="name"/>
   </define-field>
   <define-flag name="name">
      <formal-name>Property Name</formal-name>
      <description>With valid values</description>
      <constraint>
         <allowed-values>
            <enum value="x">X</enum>
            <enum value="Y">Y</enum>
         </allowed-values>
      </constraint>
   </define-flag>-->
</METASCHEMA>
